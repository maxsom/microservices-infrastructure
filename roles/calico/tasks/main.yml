---
# Ansible modprobe module doesn't provide such functionality
- name: add kernel modules to load at boot time
  copy:
    src: calico-modules.conf
    dest: /etc/modules-load.d/calico-modules.conf
    owner: root
    group: root
    mode: 0644
  tags:
    - calico

- name: load kernel module xt_set
  modprobe:
    name: xt_set
    state: present
  tags:
    - calico

- name: enable kernel packet forwarding
  sysctl:
    name: net.ipv4.ip_forward
    value: 1
    state: present
    reload: yes
  tags:
    - calico

- name: download calicoctl binary
  get_url:
    url: "{{ calico_binary }}"
    dest: /usr/bin/calicoctl
    mode: 0755
  tags:
    - calico
    - bootstrap

- name: download calicoctl bash completion script
  get_url:
    url: "{{ bintray_baseurl }}/calico/calicoctl.sh"
    dest: /etc/bash_completion.d/calicoctl.sh
    mode: 0644
  tags:
    - calico

# We can't use the Ansible standard docker module as it always starts
# containers after image was pulled
- name: ensure calico docker image is present
  command: /usr/bin/docker pull {{ calico_image }}:{{ calico_image_tag }}
  tags:
    - calico
    - bootstrap

- name: generate systemd unit file
  template:
    src: calico.service.j2
    dest: /usr/lib/systemd/system/calico.service
    owner: root
    group: root
    mode: 0644
  notify:
    - reload systemd
    - restart calico
  tags:
    - calico

- name: install consul check script
  copy:
    src: consul-check-calico-node
    dest: /usr/local/bin
    mode: 0755
  tags:
    - calico

- name: register calico with consul
  copy:
    src: calico-service.json
    dest: /etc/consul
  notify:
    - reload consul
  tags:
    - calico

- include: openstack.yml
  when: provider == 'openstack'

- name: enable and start calico
  service:
    name: calico
    enabled: yes
    state: started
  tags:
    - calico

- meta: flush_handlers

- include: calico-configure.yml
