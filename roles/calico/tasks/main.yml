---
# Ansible modprobe module doesn't provide such functionality
- name: add kernel modules to load at boot time
  copy:
    src: calico-modules.conf
    dest: /etc/modules-load.d/calico-modules.conf
    owner: root
    group: root
    mode: 0644
  tags:
    - calico

- name: load kernel module xt_set
  modprobe:
    name: xt_set
    state: present
  tags:
    - calico

- name: enable kernel packet forwarding
  sysctl:
    name: net.ipv4.ip_forward
    value: 1
    state: present
    reload: yes
  tags:
    - calico

- name: download calicoctl binary
  get_url:
    url: "{{ calico_binary }}"
    dest: /usr/bin/calicoctl
    mode: 0755
  tags:
    - calico
    - bootstrap

- name: download calicoctl bash completion script
  get_url:
    url: "{{ bintray_baseurl }}/calico/calicoctl.sh"
    dest: /etc/bash_completion.d/calicoctl.sh
    mode: 0644
  tags:
    - calico

# We can't use Ansible docker module as there is no option to pull image
# without starting it
- name: ensure calico docker image is present
  command: /usr/bin/docker pull {{ calico_image }}:{{ calico_image_tag }}
  tags:
    - calico
    - bootstrap

- name: generate systemd unit file
  template:
    src: calico.service.j2
    dest: /usr/lib/systemd/system/calico.service
    owner: root
    group: root
    mode: 0644
  notify:
    - reload systemd
    - restart calico
  tags:
    - calico

- name: install consul check script
  copy:
    src: consul-check-calico-node
    dest: /usr/local/bin
    mode: 0755
  tags:
    - calico

- name: register calico with consul
  copy:
    src: calico-service.json
    dest: /etc/consul
  notify:
    - reload consul
  tags:
    - calico 

# Before running this task make sure the OS_* variables have been sourced on your Ansible host
- name: unlock neutron ports to allow calico traffic
  local_action: shell ./files/neutron_port_update.py "{{ calico_network }}" "{{ hostvars[item].ansible_default_ipv4.macaddress }}"
  environment:
    OS_USERNAME: "{{ lookup('env','OS_USERNAME') }}"
    OS_PASSWORD: "{{ lookup('env','OS_PASSWORD') }}"
    OS_TENANT_NAME: "{{ lookup('env','OS_TENANT_NAME') }}"
    OS_AUTH_URL: "{{ lookup('env','OS_AUTH_URL') }}"
  register: exit_code
  changed_when: exit_code.rc == 2
  failed_when: exit_code.rc == 1
  run_once: True
  when: hostvars[item].ansible_default_ipv4.address is defined and provider == 'openstack'
  with_items: groups['all']
  tags:
    - calico

- name: enable and start calico
  service:
    name: calico
    enabled: yes
    state: started
  tags:
    - calico

- meta: flush_handlers

- name: add calico ip-ip pool if required
  shell: calicoctl pool add "{{ calico_network }}" --ipip --nat-outgoing
  environment:
    ETCD_AUTHORITY: "{{ calico_etcdaddr }}"
  run_once: True
  when: provider != 'openstack'
  tags:
    - calico

- name: check if calico profile already exists
  shell: calicoctl profile show|grep -w "{{ calico_profile }}"
  environment:
    ETCD_AUTHORITY: "{{ calico_etcdaddr }}"
  register: check_result
  changed_when: False
  failed_when: check_result.stderr
  run_once: True
  tags:
    - calico

- name: create calico profile
  shell: calicoctl profile add "{{ calico_profile }}"
  environment:
    ETCD_AUTHORITY: "{{ calico_etcdaddr }}"
  when: check_result.stdout == ""
  run_once: True
  tags:
    - calico
