---
- name: add mesosphere repository
  sudo: yes
  yum:
    name:  http://repos.mesosphere.io/el/7/noarch/RPMS/mesosphere-el-repo-7-1.noarch.rpm
    state: present
  tags:
    - marathon
    - bootstrap

- name: install marathon package
  sudo: yes
  yum:
    name: marathon
    state: present
  tags:
    - marathon
    - bootstrap

- name: create consul acl for marathon
  run_once: yes
  sudo: yes
  command: "curl -X PUT -d '{ \"ID\": \"{{ consul_acl_marathon_token }}\", \"Name\": \"marathon_acl\", \"Type\": \"client\", \"Rules\": \"key \\\"marathon\\\" { policy = \\\"write\\\" }\"}' http://localhost:8500/v1/acl/create?token={{ consul_acl_master_token }}"
  tags:
    - marathon

- name: install wait script
  sudo: yes
  template:
    src: marathon-wait-for-listen.sh.j2
    dest: /usr/local/bin/marathon-wait-for-listen.sh
    mode: u=rwx,g=rx,o=rx
  tags:
    - marathon

- include: conf.yml

- name: configure marathon unit file
  sudo: yes
  replace:
    dest: /usr/lib/systemd/system/marathon.service
    regexp: "=network.target"
    replace: '=mesos-master.service'
  notify:
    - reload marathon
    - restart marathon
  tags:
    - marathon

- name: configure marathon to wait for zookeeper before starting
  sudo: yes
  lineinfile:
    dest: /usr/lib/systemd/system/marathon.service
    line: "ExecStartPre=/bin/bash -c '(echo > /dev/tcp/{{ marathon_zk_dns }}/{{ marathon_zk_port }}) &> /dev/null'"
    insertbefore: "^ExecStart="
    state: present
  notify:
    - reload marathon
    - restart marathon
  tags:
    - marathon

- meta: flush_handlers

- include: nginx-proxy.yml

- name: deploy iptables configuration
  sudo: yes
  copy:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
  with_items:
    - src: marathon-consul.cfg
      dest: /etc/consul-template/config.d
  notify:
    - reload consul-template
  tags:
    - marathon

- name: deploy iptables template
  sudo: yes
  template:
    src: marathon-iptables.tmpl.j2
    dest: /etc/consul-template/templates/marathon-iptables.tmpl
  notify:
    - reload consul-template
  tags:
    - marathon

- include: collectd.yml

- name: ensure consul.d is present
  sudo: yes
  file:
    path: "{{ consul_dir }}"
    state: directory
  tags:
    - marathon

- name: generate marathon consul service
  sudo: yes
  template:
    src: marathon-consul.j2
    dest: "{{ consul_dir }}/marathon.json"
  notify:
    - reload consul
  tags:
    - marathon

- include: jobs.yml
